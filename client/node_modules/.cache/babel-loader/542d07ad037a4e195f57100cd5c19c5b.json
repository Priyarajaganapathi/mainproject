{"ast":null,"code":"import _classCallCheck from \"E:\\\\new\\\\mern-ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\new\\\\mern-ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\new\\\\mern-ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\new\\\\mern-ecommerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\new\\\\mern-ecommerce\\\\client\\\\src\\\\components\\\\mainpages\\\\cart\\\\PaypalButton.js\";\nimport React from 'react';\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\n\nvar PaypalButton = /*#__PURE__*/function (_React$Component) {\n  _inherits(PaypalButton, _React$Component);\n\n  var _super = _createSuper(PaypalButton);\n\n  function PaypalButton() {\n    _classCallCheck(this, PaypalButton);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PaypalButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var onSuccess = function onSuccess(payment) {\n        // Congratulation, it came here means everything's fine!\n        console.log(\"The payment was succeeded!\", payment); // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\n\n        _this.props.tranSuccess(payment);\n      };\n\n      var onCancel = function onCancel(data) {\n        // User pressed \"cancel\" or close Paypal's popup!\n        console.log('The payment was cancelled!', data); // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\n      };\n\n      var onError = function onError(err) {\n        // The main Paypal's script cannot be loaded or somethings block the loading of that script!\n        console.log(\"Error!\", err); // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\n        // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\n      };\n\n      var env = 'sandbox'; // you can set here to 'production' for production\n\n      var currency = 'INR'; // or you can set this value from your props or state\n\n      var total = this.props.total; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\n      // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\n\n      var client = {\n        sandbox: 'YOUR-sandbox-APP-ID',\n        production: 'YOUR-PRODUCTION-APP-ID'\n      }; // In order to get production's app-ID, you will have to send your app to Paypal for approval first\n      // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\n      //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\n      // For production app-ID:\n      //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\n      // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\n\n      var style = {\n        size: 'small',\n        color: 'blue',\n        shape: 'rect',\n        label: 'checkout',\n        tagline: false\n      };\n      return /*#__PURE__*/React.createElement(PaypalExpressBtn, {\n        env: env,\n        client: client,\n        currency: currency,\n        total: total,\n        onError: onError,\n        onSuccess: onSuccess,\n        onCancel: onCancel,\n        style: style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return PaypalButton;\n}(React.Component);\n\nexport { PaypalButton as default };","map":{"version":3,"sources":["E:/new/mern-ecommerce/client/src/components/mainpages/cart/PaypalButton.js"],"names":["React","PaypalExpressBtn","PaypalButton","onSuccess","payment","console","log","props","tranSuccess","onCancel","data","onError","err","env","currency","total","client","sandbox","production","style","size","color","shape","label","tagline","Component"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;;IAEqBC,Y;;;;;;;;;;;;;6BACR;AAAA;;AACL,UAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD,EAAa;AAC3B;AACEC,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,OAA1C,EAFyB,CAGnB;;AACA,QAAA,KAAI,CAACG,KAAL,CAAWC,WAAX,CAAuBJ,OAAvB;AACX,OALD;;AAOA,UAAMK,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;AACvB;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CI,IAA1C,EAFuB,CAGvB;AACH,OAJD;;AAMA,UAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAS;AACrB;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBM,GAAtB,EAFqB,CAGrB;AACA;AACH,OALD;;AAOA,UAAIC,GAAG,GAAG,SAAV,CArBK,CAqBgB;;AACrB,UAAIC,QAAQ,GAAG,KAAf,CAtBK,CAsBiB;;AACtB,UAAIC,KAAK,GAAG,KAAKR,KAAL,CAAWQ,KAAvB,CAvBK,CAuByB;AAC9B;;AAEA,UAAMC,MAAM,GAAG;AACXC,QAAAA,OAAO,EAAK,qBADD;AAEXC,QAAAA,UAAU,EAAE;AAFD,OAAf,CA1BK,CA8BL;AACA;AACA;AACA;AACA;AAEA;;AACA,UAAIC,KAAK,GAAG;AACRC,QAAAA,IAAI,EAAE,OADE;AAERC,QAAAA,KAAK,EAAE,MAFC;AAGRC,QAAAA,KAAK,EAAE,MAHC;AAIRC,QAAAA,KAAK,EAAE,UAJC;AAKRC,QAAAA,OAAO,EAAE;AALD,OAAZ;AAQA,0BACI,oBAAC,gBAAD;AACA,QAAA,GAAG,EAAEX,GADL;AACU,QAAA,MAAM,EAAEG,MADlB;AAEA,QAAA,QAAQ,EAAEF,QAFV;AAGA,QAAA,KAAK,EAAEC,KAHP;AAGc,QAAA,OAAO,EAAEJ,OAHvB;AAIA,QAAA,SAAS,EAAER,SAJX;AAIsB,QAAA,QAAQ,EAAEM,QAJhC;AAKA,QAAA,KAAK,EAAEU,KALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAQH;;;;EAtDqCnB,KAAK,CAACyB,S;;SAA3BvB,Y","sourcesContent":["import React from 'react';\r\nimport PaypalExpressBtn from 'react-paypal-express-checkout';\r\n \r\nexport default class PaypalButton extends React.Component {\r\n    render() {\r\n        const onSuccess = (payment) => {\r\n            // Congratulation, it came here means everything's fine!\r\n            \t\tconsole.log(\"The payment was succeeded!\", payment);\r\n                    // You can bind the \"payment\" object's value to your state or props or whatever here, please see below for sample returned data\r\n                    this.props.tranSuccess(payment)\r\n        }\r\n \r\n        const onCancel = (data) => {\r\n            // User pressed \"cancel\" or close Paypal's popup!\r\n            console.log('The payment was cancelled!', data);\r\n            // You can bind the \"data\" object's value to your state or props or whatever here, please see below for sample returned data\r\n        }\r\n \r\n        const onError = (err) => {\r\n            // The main Paypal's script cannot be loaded or somethings block the loading of that script!\r\n            console.log(\"Error!\", err);\r\n            // Because the Paypal's main script is loaded asynchronously from \"https://www.paypalobjects.com/api/checkout.js\"\r\n            // => sometimes it may take about 0.5 second for everything to get set, or for the button to appear\r\n        }\r\n \r\n        let env = 'sandbox'; // you can set here to 'production' for production\r\n        let currency = 'INR'; // or you can set this value from your props or state\r\n        let total = this.props.total; // same as above, this is the total amount (based on currency) to be paid by using Paypal express checkout\r\n        // Document on Paypal's currency code: https://developer.paypal.com/docs/classic/api/currency_codes/\r\n \r\n        const client = {\r\n            sandbox:    'YOUR-sandbox-APP-ID',\r\n            production: 'YOUR-PRODUCTION-APP-ID',\r\n        }\r\n        // In order to get production's app-ID, you will have to send your app to Paypal for approval first\r\n        // For sandbox app-ID (after logging into your developer account, please locate the \"REST API apps\" section, click \"Create App\"):\r\n        //   => https://developer.paypal.com/docs/classic/lifecycle/sb_credentials/\r\n        // For production app-ID:\r\n        //   => https://developer.paypal.com/docs/classic/lifecycle/goingLive/\r\n \r\n        // NB. You can also have many Paypal express checkout buttons on page, just pass in the correct amount and they will work!\r\n        let style = {\r\n            size: 'small',\r\n            color: 'blue',\r\n            shape: 'rect',\r\n            label: 'checkout',\r\n            tagline: false\r\n        }\r\n\r\n        return (\r\n            <PaypalExpressBtn \r\n            env={env} client={client} \r\n            currency={currency} \r\n            total={total} onError={onError} \r\n            onSuccess={onSuccess} onCancel={onCancel}\r\n            style={style} />\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}